(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{346:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("习惯了面向搜索引擎编程的我对于正则一直都是得过且过，但是为了成为一名合格的攻城狮，如今我决定痛改前非，不让自己生活在舒适区，趁年轻，学就完事儿了~")]),t._v(" "),a("h2",{attrs:{id:"匹配字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符"}},[t._v("#")]),t._v(" 匹配字符")]),t._v(" "),a("h3",{attrs:{id:"匹配手机号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配手机号"}},[t._v("#")]),t._v(" 匹配手机号")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^1(3[0-9]|5[012356789]|66|7[3678]|8[0-9]|4[57])[0-9]{8}$/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" phone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'13386472394'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("phone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("code",[t._v("^")]),t._v(": 开头"),a("br"),t._v(" "),a("code",[t._v("$")]),t._v(": 结尾"),a("br"),t._v(" "),a("code",[t._v("|")]),t._v(": 或"),a("br"),t._v(" "),a("code",[t._v("-")]),t._v(": 定义一个区间\n"),a("code",[t._v("()")]),t._v(": 一个元组"),a("br"),t._v(" "),a("code",[t._v("[]")]),t._v(": 定义一个字符集合，匹配字符集合中的一个字符，在字符集合里面像 .，\\这些字符都表示其本身"),a("br"),t._v(" "),a("code",[t._v("{m,n}")]),t._v(": 匹配前面一个字符至少 m 次至多 n 次重复，还有{m}表示匹配 m 次，{m,}表示至少 m 次")]),t._v(" "),a("p",[t._v("分析：以1开头，小括号里的匹配了手机号的第二位和第三位，如果第二位数字是3，则第三位数是0~9中的一个，如果第二位是5，则第三位数字是012356789中的一个，依次类推，从第四位数字开始就可以是任意的数字了，循环取任意的数字8次结尾，这样11位的手机号就匹配出来了。")]),t._v(" "),a("h3",{attrs:{id:"匹配邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配邮箱"}},[t._v("#")]),t._v(" 匹配邮箱")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'y_1+d@qq.12.com'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("code",[t._v("\\w")]),t._v(": 表示数字大小写字母和下划线"),a("br"),t._v(" "),a("code",[t._v("\\W")]),t._v(": 表示非单词字符"),a("br"),t._v(" "),a("code",[t._v("+")]),t._v(": 匹配前面一个表达式"),a("strong",[t._v("一次")]),t._v("或者多次，至少要有一次"),a("br"),t._v(" "),a("code",[t._v("*")]),t._v(": 匹配前面一个表达式"),a("strong",[t._v("零次")]),t._v("或者多次，可以没有"),a("br"),t._v(" "),a("code",[t._v("\\")]),t._v(": 转义字符，后面跟特殊字符表示匹配特殊字符，例如"),a("code",[t._v("/a\\*/")]),t._v("将匹配"),a("code",[t._v("a*")]),t._v("，而不是匹配零个或多个a")]),t._v(" "),a("p",[t._v("分析：可以用至少一个数字或字母或下划线开头，字符中间可以穿插-、+、.这三个字符，也可以没有，以@符号分隔，看懂了前面后面就好理解了。")]),t._v(" "),a("h3",{attrs:{id:"url匹配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url匹配"}},[t._v("#")]),t._v(" URL匹配")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^((ht|f)tps?):\\/\\/[\\w\\-]+(\\.[\\w\\-]+)+([\\w\\-.,@?^=%&:\\/~+#]*[\\w\\-@?^=%&\\/~+#])?$/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://baidu.com'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("code",[t._v("?")]),t._v(": 单独使用匹配前面一个表达式"),a("strong",[t._v("零次")]),t._v("或者"),a("strong",[t._v("一次")]),t._v(', 如果跟在任何量词*,+,?,{}后面的时候将会使量词变为非贪婪模式（尽量匹配少的字符），默认是使用贪婪模式。比如对 "123abc" 应用 /\\d+/ 将会返回 "123"，如果使用 /\\d+?/,那么就只会匹配到 "1"'),a("br"),t._v(" "),a("code",[t._v(".")]),t._v(": 匹配除换行符之外的任意字符")]),t._v(" "),a("p",[t._v("分析："),a("br"),t._v(" "),a("code",[t._v("^((ht|f)tps?)")]),t._v(": 匹配http|ftp|https|ftps，"),a("code",[t._v("s?")]),t._v("表示s出现零次或一次"),a("br"),t._v(" "),a("code",[t._v("\\/\\/")]),t._v(": 匹配两个斜杠"),a("br"),t._v(" "),a("code",[t._v("[\\w\\-]+")]),t._v(": 匹配一个或多个数字、字母、下划线、-"),a("br"),t._v(" "),a("code",[t._v("(\\.[\\w\\-]+)+")]),t._v(": 匹配一组或多组以.开头，一个或多个数字、字母、下划线、-结尾的字符串"),a("br"),t._v(" "),a("code",[t._v("[\\w\\-.,@?^=%&:\\/~+#]*")]),t._v(": 匹配零个或多个特殊字符组成字符串A，这些字符包含数字、字母、下划线、-、除换行外任意字符、,、@、？、^、=、%、&、:、\\、~、+、#"),a("br"),t._v(" "),a("code",[t._v("[\\w\\-@?^=%&\\/~+#]")]),t._v(": 匹配一个中括号中的特殊字符B"),a("br"),t._v(" "),a("code",[t._v("([\\w\\-.,@?^=%&:\\/~+#]*[\\w\\-@?^=%&\\/~+#])?")]),t._v(": 匹配零组或一组由字符串A和字符B组成的字符串")]),t._v(" "),a("h3",{attrs:{id:"匹配中文字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配中文字符"}},[t._v("#")]),t._v(" 匹配中文字符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/[\\u4e00-\\u9fa5]/gm")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" chinese "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'正则^表达式123**&&'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("chinese"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ '正', '则', '表', '达', '式' ]")]),t._v("\n")])])]),a("p",[a("code",[t._v("\\u")]),t._v(": 按unicode(utf-8)匹配（主要针对多字节比如汉字）"),a("br"),t._v(" "),a("code",[t._v("4e00-9fa5")]),t._v(": 中日韩认同表意文字区，总计收容20,902个中日韩汉字"),a("br"),t._v(" "),a("code",[t._v("g")]),t._v(": 进行全局匹配，即对字符串进行全文匹配，直到字符串遍历结束"),a("br"),t._v(" "),a("code",[t._v("m")]),t._v(": 更改^和$的含义，使它们分别在任意一行的行首和行尾匹配，而不仅仅在整个字符串的开头和结尾匹配。(在此模式下,$的精确含意是:匹配\\n之前的位置以及字符串结束前的位置.)")]),t._v(" "),a("h3",{attrs:{id:"匹配行尾和行尾行首空格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配行尾和行尾行首空格"}},[t._v("#")]),t._v(" 匹配行尾和行尾行首空格")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(^\\s*)|(\\s*$)/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" part "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" 十年生死两茫茫  写程序  到天亮  千行代码  bug何处藏")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("part"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// **十年生死两茫茫  写程序  到天亮  千行代码  bug何处藏**")]),t._v("\n")])])]),a("p",[a("code",[t._v("\\s")]),t._v(": 匹配任意空白符")]),t._v(" "),a("h3",{attrs:{id:"给日期换一个格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#给日期换一个格式"}},[t._v("#")]),t._v(" 给日期换一个格式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^(\\d{4})[/-](\\d{2})[/-](\\d{2})$/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" time "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2019-10-30'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1年$2月$3日'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2019年10月30日")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$2/$3/$1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10/30/2019")]),t._v("\n")])])]),a("p",[a("code",[t._v("$1")]),t._v(": 匹配第一组,即第一个括号中的内容")]),t._v(" "),a("h2",{attrs:{id:"匹配位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配位置"}},[t._v("#")]),t._v(" 匹配位置")]),t._v(" "),a("blockquote",[a("p",[t._v("把位置理解空字符，是对位置非常有效的理解方式")])]),t._v(" "),a("p",[t._v("依然从例子入手：")]),t._v(" "),a("h3",{attrs:{id:"数字的千位分隔符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数字的千位分隔符"}},[t._v("#")]),t._v(" 数字的千位分隔符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" string "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12345678 123456789'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\B(?=(\\d{3})+\\b)/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12,345,678 123,456,789")]),t._v("\n")])])]),a("p",[a("code",[t._v("\\b")]),t._v("是单词边界，具体就是 \\w 与 \\W 之间的位置，也包括 \\w 与 ^ 之间的位置，和 \\w 与 $ 之间的位置"),a("br"),t._v(" "),a("code",[t._v("\\B")]),t._v("与之相反，即除了\\b匹配的位置之外的位置"),a("br"),t._v(" "),a("code",[t._v("(?=p)")]),t._v("匹配 p 前面的位置，或者说，该位置后面的字符要匹配 p"),a("br"),t._v(" "),a("code",[t._v("(?!p)")]),t._v("与之相反，即除p前面的位置之外的其他位置")]),t._v(" "),a("p",[t._v("分析："),a("br"),t._v("\n1、首先弄出所有的逗号："),a("br"),t._v("\n匹配三个数字："),a("code",[t._v("/\\d{3}/g")]),a("br"),t._v("\n匹配这三个数字前的位置："),a("code",[t._v("/(?=\\d{3})/g")]),a("br"),t._v("\n匹配所有三个数字前的位置："),a("code",[t._v("/(?=(\\d{3})+)/g")]),a("br"),t._v("\n三位数是从后面往前数的："),a("code",[t._v("/(?=\\d{3}+$)/g")]),a("br"),t._v("\n2、处理特殊情况："),a("br"),t._v("\n逗号的位置不能是开头："),a("code",[t._v("/(?!^)(?=\\d{3}+$)/g")]),a("br"),t._v("\n例子中有空格，逗号不能出现在这个位置："),a("code",[t._v("/(?!\\b)/g")]),t._v("即相当于"),a("code",[t._v("/\\B/g")]),t._v("，意思是不匹配单词的边界"),a("br"),t._v("\n开头和结尾也是单词的边界，所以将开头和结尾换成\\b："),a("code",[t._v("/(?!\\b)(?=(\\d{3})+\\b)/g")]),t._v("即"),a("code",[t._v("/\\B(?=(\\d{3})+\\b)/g")])]),t._v(" "),a("h3",{attrs:{id:"验证密码问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证密码问题"}},[t._v("#")]),t._v(" 验证密码问题")]),t._v(" "),a("p",[t._v("1、至少包含数字、大写字母或小写字母两种字符"),a("br"),t._v("\n2、长度不少6不超过12")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" reg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?!^[0-9]{6,12}$)(?!^[a-z]{6,12}$)(?!^[A-Z]{6,12}$)^[0-9A-Za-z]{6,12}$/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234567"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 全是数字")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcdef"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 全是小写字母")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABCDEFGH"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 全是大写字母")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ab23C"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 不足6位")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABCDEF234"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 大写字母和数字")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abcdEF234"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true 三者都有")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abcdEF234tttttttttt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false 超过12位")]),t._v("\n")])])]),a("p",[t._v("分析："),a("br"),t._v("\n1、不能全部是数字："),a("code",[t._v("/(?!^[0-9]{6,12}$)/")]),a("br"),t._v("\n2、不能全部是小写字母："),a("code",[t._v("/(?!^[a-z]{6,12}$)/")]),a("br"),t._v("\n3、不能全部是大写字母："),a("code",[t._v("/(?!^[A-Z]{6,12}$)/")]),a("br"),t._v("\n4、正常情况： "),a("code",[t._v("/^[0-9A-Za-z]{6,12}$/")])]),t._v(" "),a("h2",{attrs:{id:"未完待续"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未完待续"}},[t._v("#")]),t._v(" 未完待续")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.baidufe.com/item/eb10deb92f2c05ca32cf.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("各字符总结"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);